prometheus:
  server:
    persistentVolume:
      enabled: true
  prometheusSpec:
    externalUrl: "https://prometheus.adevinta-test.com"
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 30Gi
kubelet:
  serviceMonitor:
    https: true
coreDns:
  enabled: false
grafana:
  adminPassword: adevinta
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
      - match:        
          alertname: 'Watchdog'
        receiver: 'null'
    receivers:
    - name: 'null'
    - name: 'slack'
      slack_configs:
      - api_url: 'https://hooks.slack.com/'
        send_resolved: true
        channel: '#k8smonitoring'
        title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
        text: |-
          {{ range .Alerts }}
            *Alert:* {{ .Labels.alertname }} - `{{ .Labels.severity }}`
            *Description:* {{ .Annotations.message }}
            *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook_url }}|:spiral_note_pad:>
            *Details:*
            {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
  alertmanagerSpec:
    externalUrl: "https://alertmanager.adevinta-test.com"
